---
apiVersion: v1
kind: Namespace
metadata:
  name: mariefm
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: mariefm  #ganti namespace masing2
spec:
  type: LoadBalancer
  selector:
    app: rigup
    tier: frontend
  ports:
  - port: 3000
    targetPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: mariefm #ganti namespace masing2
spec:
  selector:
    app: rigup
    tier: backend
  ports:
  - port: 2000
    targetPort: 2000
---
apiVersion: v1
kind: Service
metadata:
  name: database
  namespace: mariefm #ganti namespace masing2
spec:
  selector:
    app: rigup
    tier: db
  ports:
  - port: 3306
    targetPort: 3306
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: rigup
    tier: frontend
  name: rigup-frontend-deployment
  namespace: mariefm  #ganti namespace masing2
spec:
  replicas: 2
  selector:
    matchLabels:
      app: rigup
      tier: frontend
  strategy:
    rollingUpdate:
      maxSurge: 33%
      maxUnavailable: 33%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: rigup
        tier: frontend
    spec:
      containers:
      - image: muhammadariefmaulana/rigup_frontend:latest
        imagePullPolicy: IfNotPresent
        name: frontend
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        env:
        - name: API_URL
          value: http://backend:2000
          # value: http://$(BACKEND_SERVICE_HOST):2000
        - name: NODE_ENV
          value: production
        - name: PUBLIC_URL
          value: http://frontend:3000
          # value: http://$(RIGUP_FRONTEND_SERVICE_HOST):$(RIGUP_FRONTEND_SERVICE_PORT)
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: rigup
    tier: backend
  name: rigup-backend-deployment
  namespace: mariefm  #ganti namespace masing2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rigup
      tier: backend
  strategy:
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: rigup
        tier: backend
    spec:
      containers:
      - image: muhammadariefmaulana/rigup_backend:latest
        imagePullPolicy: IfNotPresent
        name: backend
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        env:
        - name: HOST
          value: database
          # value: $(DATABASE_SERVICE_HOST)
        - name: MYSQL_PASSWORD
          value: secretadmin
        - name: PORT
          value: "2000"
        - name: SECRET_KEY
          value: asdf1234zxc.
        - name: FRONTEND_URL
          value: http://frontend:80
          # value: http://$(RIGUP_FRONTEND_SERVICE_HOST):80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: rigup
    tier: db
  name: rigup-db-deployment
  namespace: mariefm  #ganti namespace masing2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rigup
      tier: db
  strategy:
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: rigup
        tier: db
    spec:
      containers:
      - image: muhammadariefmaulana/rigup_database:latest
        imagePullPolicy: IfNotPresent
        name: database
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: secretadmin
        - name: MYSQL_DATABASE
          value: rigdb_rev2
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: frontend-hpa
  namespace: mariefm
spec:
  maxReplicas: 4
  minReplicas: 2
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: rigup-frontend-deployment
  metrics:
   - type: Resource
     resource:
       name: cpu
       target:
         type: Utilization
         averageUtilization: 70
   - type: Resource
     resource:
       name: memory
       target:
         type: Utilization
         averageUtilization: 70
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: frontend-ingress
  namespace: mariefm
  labels:
    name: frontend-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  tls:
  - hosts:
      - devops7.telkomsel.com
    secretName: ingress-cert
  rules:
  - host: devops7.telkomsel.com
    http:
      paths:
      - backend:
          service:
            name: frontend
            port:
              number: 3000
        path: /
        pathType: Prefix
---
  